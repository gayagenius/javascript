class MumMboga {
  
  constructor() {
    this.products = [];
    this.carts = [];
    this.orders = [];
    this.customers  = [];
  }

  addProduct(productId,name,price,quantity){
    let product ={
      id:productId,
      name:name,
      price:price,
      quantity:quantity,
    }
    this.products.push(product)
  }
  getProduct(productId){
    for (var i = 0;i<this.products.length;i++){
      let product =this.products[i]
      if(product.id===productId){
        return product
      }
    }
  }
  removeProduct(productId){
    let product =this.getProduct(productId)
    let index = this.products.indexOf(product)
    this.products.splice(index,1)
  }
  updateProduct(productId,name,price,quantity){
    let product = this.getProduct(productId);
    let myIndex = this.products.indexOf(product);
    this.products[myIndex]={productId:productId,name:name,price:price,quantity:quantity};
    this.products.push(product)
  }
  getProductCatalog(){
    return this.products
  }
  addToCart(cartId,product,orderQuantity,customerId){
    let cart ={
      cartId:cartId,
      product:product,
      orderQuantity:orderQuantity,
      customerId:customerId,
    }
    this.carts.push(cart)
  }
   removeFromCart(productId){
     let product = this.getProduct(productId)
     let index = this.products.indexOf(product)
     this.products.splice(index,2)
   }
  createOrder(orderId,cartId){
    let order ={
      orderId:orderId,
      cartId:cartId,
    }
    this.order.push(order)
  }
  cancelOrder(orderId){
    let order = this.getOrder(orderId)
    let index = this.order.indexOf(order)
    this.order.splice(index,1)
  }
  calculateOrderCost(orderId){
    for(var i=0;i<this.orders.length; i++){
      let order =this.orders[i];
      if(order.orderId==orderId){
        
      }
    }
  }
  getOrder(orderId){
    
  }
//   addCustomer( customerId, name, email, address ){
//     let customer={
//       id:customerId,
//       name:name,
//       email:email,
//       address:address,
//     }
//     this.customers.push(customer)
//   }
//   removeCustomer(customerId){
//     let customer =this.getCustomer(customerId)
//     let index = this.customers.indexOf(customer)
//     this.customers.splice(index,1)
    
//   }
//   updateCustomer( customerId, name, email, address ){
//     let customer = this.getCustomer(customerId);
//     let myIndex = this.customers.indexOf(customer);
//     this.customers[myIndex]={customerId:customerId,name:name,email:email,address:address};
//     this.customers.push(customer)
    
//   }
//   getCustomer( customerId){
//     for (var i = 0;i<this.customers.length;i++){
//       let customer =this.customers[i]
//       if(customer.id===customerId){
//         return customer
    
//   }
}
var mumMboga=new MumMboga()
mumMboga.addProduct(1,"Tomatoes",30,6)
mumMboga.addProduct(1,"pepper",90,5)
mumMboga.addProduct(1,"onions",40,7)
console.log(mumMboga.products)
mumMboga.removeProduct(1)
console.log(mumMboga.products)

NB/The code I have commented out has a strange error but the rest is running fine,kindly just consider the rest.
    